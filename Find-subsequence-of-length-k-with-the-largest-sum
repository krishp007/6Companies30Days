Link to problem submission
https://leetcode.com/problems/find-subsequence-of-length-k-with-the-largest-sum/submissions/1143211436/

Code

class Solution {
public:
    
    vector<int> maxSubsequence(vector<int>& nums, int k) {
        vector<int> ans;
        vector<pair<int,int>> p(nums.size());

        for(int i=0;i<nums.size();i++){
            p[i]={nums[i],i};
        }

        sort(p.begin(), p.end());
        sort(p.end()-k, p.end(), [](auto &left, auto &right) {
            return left.second < right.second;
        });

        for(int i=nums.size()-k;i<nums.size();i++){
            ans.push_back(p[i].first);
        }

        return ans;
    }
};
